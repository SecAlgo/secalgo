from sa.secalgo import *
configure(benchmark = True)
class RoleI (process):
    def setup(skI, R, pkR):
        pass
    def run():
        k = keygen('shared')
        send(('encrypt_sign', encrypt(sign(k, skI), pkR)), to = R)
        await(some(received(m, from_ = R)))
        s = decrypt(m, k)
        output('DECRYPTED MESSAGE:', s)
class RoleR (process):
    def setup(skR, pkI):
        self.s = 'secret'
    def run():
        if await(False): pass
        elif timeout(10): pass
    def receive(msg=('encrypt_sign', m), from_ = I):
        k = verify(decrypt(m, skR), pkI)
        send(encrypt(s, k), to = I)
def main():
    skI, pkI = keygen('public')
    skR, pkR = keygen('public')
    R = new(RoleR, (skR, pkI))
    I = new(RoleI, (skI, R, pkR))
    start(I)
    start(R)
