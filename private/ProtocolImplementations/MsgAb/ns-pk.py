# -*- generated by 1.0.9 -*-
import da
PatternExpr_174 = da.pat.TuplePattern([da.pat.ConstantPattern('1'), da.pat.FreePattern('m')])
PatternExpr_181 = da.pat.FreePattern('I')
PatternExpr_217 = da.pat.TuplePattern([da.pat.ConstantPattern('4'), da.pat.FreePattern('m')])
PatternExpr_224 = da.pat.FreePattern('R')
PatternExpr_287 = da.pat.TuplePattern([da.pat.ConstantPattern('2'), da.pat.FreePattern('m')])
PatternExpr_294 = da.pat.BoundPattern('_BoundPattern295_')
PatternExpr_349 = da.pat.TuplePattern([da.pat.ConstantPattern('6'), da.pat.FreePattern('m2')])
PatternExpr_356 = da.pat.FreePattern('R')
PatternExpr_442 = da.pat.TuplePattern([da.pat.ConstantPattern('3'), da.pat.FreePattern('m')])
PatternExpr_449 = da.pat.FreePattern('I')
PatternExpr_480 = da.pat.TuplePattern([da.pat.ConstantPattern('5'), da.pat.FreePattern('m2')])
PatternExpr_487 = da.pat.FreePattern('S')
PatternExpr_561 = da.pat.TuplePattern([da.pat.ConstantPattern('7'), da.pat.FreePattern('m3')])
PatternExpr_568 = da.pat.BoundPattern('_BoundPattern569_')
_config_object = {}
from sa.secalgo import *

class roleS(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleSReceivedEvent_0', PatternExpr_174, sources=[PatternExpr_181], destinations=None, timestamps=None, record_history=None, handlers=[self._roleS_handler_173]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleSReceivedEvent_1', PatternExpr_217, sources=[PatternExpr_224], destinations=None, timestamps=None, record_history=None, handlers=[self._roleS_handler_216])])

    def setup(self, **rest_705):
        super().setup(**rest_705)
        pass

    def run(self):
        super()._label('_st_label_166', block=False)
        _st_label_166 = 0
        self._timer_start()
        while (_st_label_166 == 0):
            _st_label_166 += 1
            if False:
                pass
                _st_label_166 += 1
            elif self._timer_expired:
                pass
                _st_label_166 += 1
            else:
                super()._label('_st_label_166', block=True, timeout=10)
                _st_label_166 -= 1

    def _roleS_handler_173(self, m, I):
        print('##########:', 2, flush=True)
        self.send(('2', (sign((m[1], pk(m[1])), key=sk(self._id)),)), to=m[0])
    _roleS_handler_173._labels = None
    _roleS_handler_173._notlabels = None

    def _roleS_handler_216(self, m, R):
        print('##########:', 5, flush=True)
        self.send(('5', (sign((m[1], pk(m[1])), key=sk(self._id)),)), to=m[0])
    _roleS_handler_216._labels = None
    _roleS_handler_216._notlabels = None

class roleI(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._roleIReceivedEvent_0 = []
        self._roleIReceivedEvent_1 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleIReceivedEvent_0', PatternExpr_287, sources=[PatternExpr_294], destinations=None, timestamps=None, record_history=True, handlers=[]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleIReceivedEvent_1', PatternExpr_349, sources=[PatternExpr_356], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, S, R, **rest_705):
        super().setup(S=S, R=R, **rest_705)
        self._state.S = S
        self._state.R = R
        pass

    def run(self):
        print('##########:', 1, flush=True)
        self.send(('1', (self._id, self._state.R)), to=self._state.S)
        super()._label('_st_label_284', block=False)
        m = None

        def ExistentialOpExpr_285():
            nonlocal m
            for (_, (_, _, _BoundPattern302_), (_ConstantPattern304_, m)) in self._roleIReceivedEvent_0:
                if (_BoundPattern302_ == self._state.S):
                    if (_ConstantPattern304_ == '2'):
                        if True:
                            return True
            return False
        _st_label_284 = 0
        while (_st_label_284 == 0):
            _st_label_284 += 1
            if ExistentialOpExpr_285():
                _st_label_284 += 1
            else:
                super()._label('_st_label_284', block=True)
                _st_label_284 -= 1
        nI = nonce()
        print('##########:', 3, flush=True)
        self.send(('3', (encrypt((nI, self._id), key=verify(m[0], key=pk(self._state.S))[1]),)), to=self._state.R)
        super()._label('_st_label_346', block=False)
        R = m2 = None

        def ExistentialOpExpr_347():
            nonlocal R, m2
            for (_, (_, _, self._state.R), (_ConstantPattern366_, m2)) in self._roleIReceivedEvent_1:
                if (_ConstantPattern366_ == '6'):
                    if True:
                        return True
            return False
        _st_label_346 = 0
        while (_st_label_346 == 0):
            _st_label_346 += 1
            if ExistentialOpExpr_347():
                _st_label_346 += 1
            else:
                super()._label('_st_label_346', block=True)
                _st_label_346 -= 1
        print('##########:', 7, flush=True)
        self.send(('7', (encrypt(decrypt(m2[0], key=sk(self._id))[1], key=verify(m[0], pk(self._state.S))[1]),)), to=self._state.R)
        if (nI == decrypt(m2[0], key=sk(self._id))[0]):
            self.output('I authenticated R')

class roleR(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._roleRReceivedEvent_1 = []
        self._roleRReceivedEvent_2 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleRReceivedEvent_0', PatternExpr_442, sources=[PatternExpr_449], destinations=None, timestamps=None, record_history=None, handlers=[self._roleR_handler_441]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleRReceivedEvent_1', PatternExpr_480, sources=[PatternExpr_487], destinations=None, timestamps=None, record_history=True, handlers=[]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleRReceivedEvent_2', PatternExpr_561, sources=[PatternExpr_568], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, S, **rest_705):
        super().setup(S=S, **rest_705)
        self._state.S = S
        pass

    def run(self):
        super()._label('_st_label_434', block=False)
        _st_label_434 = 0
        self._timer_start()
        while (_st_label_434 == 0):
            _st_label_434 += 1
            if False:
                pass
                _st_label_434 += 1
            elif self._timer_expired:
                pass
                _st_label_434 += 1
            else:
                super()._label('_st_label_434', block=True, timeout=10)
                _st_label_434 -= 1

    def _roleR_handler_441(self, m, I):
        print('##########:', 4, flush=True)
        self.send(('4', (self._id, decrypt(m[0], key=sk(self._id))[1])), to=self._state.S)
        super()._label('_st_label_477', block=False)
        m2 = S = None

        def ExistentialOpExpr_478():
            nonlocal m2, S
            for (_, (_, _, self._state.S), (_ConstantPattern497_, m2)) in self._roleRReceivedEvent_1:
                if (_ConstantPattern497_ == '5'):
                    if True:
                        return True
            return False
        _st_label_477 = 0
        while (_st_label_477 == 0):
            _st_label_477 += 1
            if ExistentialOpExpr_478():
                _st_label_477 += 1
            else:
                super()._label('_st_label_477', block=True)
                _st_label_477 -= 1
        nR = nonce()
        print('##########:', 6, flush=True)
        self.send(('6', (encrypt((decrypt(m[0], key=sk(self._id))[0], nR, self._id), key=verify(m2[0], key=pk(self._state.S))[1]),)), to=decrypt(m[0], key=sk(self._id))[1])
        super()._label('_st_label_558', block=False)
        m3 = None

        def ExistentialOpExpr_559():
            nonlocal m3
            for (_, (_, _, _BoundPattern576_), (_ConstantPattern578_, m3)) in self._roleRReceivedEvent_2:
                if (_BoundPattern576_ == I):
                    if (_ConstantPattern578_ == '7'):
                        if True:
                            return True
            return False
        _st_label_558 = 0
        while (_st_label_558 == 0):
            _st_label_558 += 1
            if ExistentialOpExpr_559():
                _st_label_558 += 1
            else:
                super()._label('_st_label_558', block=True)
                _st_label_558 -= 1
        if (nR == decrypt(m3[0], key=sk(self._id))):
            self.output('R authenticated I')
    _roleR_handler_441._labels = None
    _roleR_handler_441._notlabels = None

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])

    def run(self):
        (skS, pkS) = keygen('public')
        (skI, pkI) = keygen('public')
        (skR, pkR) = keygen('public')
        I = self.new(roleI)
        R = self.new(roleR)
        S = self.new(roleS)
        self._setup(S, ())
        self._setup(I, (S, R))
        self._setup(R, (S,))
        register_key('public', S, pkS)
        register_key('public', I, pkI)
        register_key('public', R, pkR)
        register_key('private', S, skS)
        register_key('private', I, skI)
        register_key('private', R, skR)
        self._start(S)
        self._start(R)
        self._start(I)
