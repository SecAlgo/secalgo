# -*- generated by 1.0.12 -*-
import da
PatternExpr_183 = da.pat.TuplePattern([da.pat.ConstantPattern('msg1'), da.pat.TuplePattern([da.pat.FreePattern('A'), da.pat.FreePattern('B')])])
PatternExpr_193 = da.pat.BoundPattern('_BoundPattern194_')
PatternExpr_226 = da.pat.TuplePattern([da.pat.ConstantPattern('msg4'), da.pat.TuplePattern([da.pat.FreePattern('B'), da.pat.FreePattern('A')])])
PatternExpr_236 = da.pat.BoundPattern('_BoundPattern237_')
PatternExpr_298 = da.pat.TuplePattern([da.pat.ConstantPattern('msg2'), da.pat.FreePattern('sigS')])
PatternExpr_305 = da.pat.BoundPattern('_BoundPattern306_')
PatternExpr_355 = da.pat.TuplePattern([da.pat.ConstantPattern('msg6'), da.pat.FreePattern('encBA')])
PatternExpr_362 = da.pat.BoundPattern('_BoundPattern363_')
PatternExpr_430 = da.pat.TuplePattern([da.pat.ConstantPattern('msg3'), da.pat.FreePattern('encAB')])
PatternExpr_437 = da.pat.FreePattern('A')
PatternExpr_466 = da.pat.TuplePattern([da.pat.ConstantPattern('msg5'), da.pat.FreePattern('sigS')])
PatternExpr_473 = da.pat.BoundPattern('_BoundPattern474_')
PatternExpr_524 = da.pat.TuplePattern([da.pat.ConstantPattern('msg7'), da.pat.FreePattern('encAB2')])
PatternExpr_531 = da.pat.BoundPattern('_BoundPattern532_')
_config_object = {}
from sa.secalgoB import *

class roleS(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleSReceivedEvent_0', PatternExpr_183, sources=[PatternExpr_193], destinations=None, timestamps=None, record_history=None, handlers=[self._roleS_handler_182]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleSReceivedEvent_1', PatternExpr_226, sources=[PatternExpr_236], destinations=None, timestamps=None, record_history=None, handlers=[self._roleS_handler_225])])

    def setup(self, skS, clientKeys, **rest_634):
        super().setup(skS=skS, clientKeys=clientKeys, **rest_634)
        self._state.skS = skS
        self._state.clientKeys = clientKeys
        at_fork()
        self._state.terminate = False

    def run(self):
        super()._label('_st_label_178', block=False)
        _st_label_178 = 0
        while (_st_label_178 == 0):
            _st_label_178 += 1
            if self._state.terminate:
                _st_label_178 += 1
            else:
                super()._label('_st_label_178', block=True)
                _st_label_178 -= 1

    def _roleS_handler_182(self, A, B):
        pkB = [x for (p, x) in self._state.clientKeys if (p == B)].pop()
        self.send(('msg2', sign((B, pkB), key=self._state.skS)), to=A)
    _roleS_handler_182._labels = None
    _roleS_handler_182._notlabels = None

    def _roleS_handler_225(self, B, A):
        pkA = [x for (p, x) in self._state.clientKeys if (p == A)].pop()
        self.send(('msg5', sign((A, pkA), key=self._state.skS)), to=B)
        self._state.terminate = True
    _roleS_handler_225._labels = None
    _roleS_handler_225._notlabels = None

class roleA(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._roleAReceivedEvent_0 = []
        self._roleAReceivedEvent_1 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleAReceivedEvent_0', PatternExpr_298, sources=[PatternExpr_305], destinations=None, timestamps=None, record_history=True, handlers=[]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleAReceivedEvent_1', PatternExpr_355, sources=[PatternExpr_362], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, skA, S, pkS, B, **rest_634):
        super().setup(skA=skA, S=S, pkS=pkS, B=B, **rest_634)
        self._state.skA = skA
        self._state.S = S
        self._state.pkS = pkS
        self._state.B = B
        at_fork()

    def run(self):
        self.send(('msg1', (self._id, self._state.B)), to=self._state.S)
        super()._label('_st_label_295', block=False)
        pkB = sigS = None

        def ExistentialOpExpr_296():
            nonlocal pkB, sigS
            for (_, (_, _, _BoundPattern313_), (_ConstantPattern315_, sigS)) in self._roleAReceivedEvent_0:
                if (_BoundPattern313_ == self._state.S):
                    if (_ConstantPattern315_ == 'msg2'):

                        def ExistentialOpExpr_319(sigS):
                            nonlocal pkB
                            for (_BoundPattern322_, pkB) in [verify(sigS, key=self._state.pkS)]:
                                if (_BoundPattern322_ == self._state.B):
                                    if True:
                                        return True
                            return False
                        if ExistentialOpExpr_319(sigS=sigS):
                            return True
            return False
        _st_label_295 = 0
        while (_st_label_295 == 0):
            _st_label_295 += 1
            if ExistentialOpExpr_296():
                _st_label_295 += 1
            else:
                super()._label('_st_label_295', block=True)
                _st_label_295 -= 1
        nA = nonce()
        self.send(('msg3', encrypt((nA, self._id), key=pkB)), to=self._state.B)
        super()._label('_st_label_352', block=False)
        nB = encBA = None

        def ExistentialOpExpr_353():
            nonlocal nB, encBA
            for (_, (_, _, _BoundPattern370_), (_ConstantPattern372_, encBA)) in self._roleAReceivedEvent_1:
                if (_BoundPattern370_ == self._state.B):
                    if (_ConstantPattern372_ == 'msg6'):

                        def ExistentialOpExpr_376(encBA):
                            nonlocal nB
                            for (_BoundPattern379_, nB, _BoundPattern382_) in [decrypt(encBA, key=self._state.skA)]:
                                if (_BoundPattern379_ == nA):
                                    if (_BoundPattern382_ == self._state.B):
                                        if True:
                                            return True
                            return False
                        if ExistentialOpExpr_376(encBA=encBA):
                            return True
            return False
        _st_label_352 = 0
        while (_st_label_352 == 0):
            _st_label_352 += 1
            if ExistentialOpExpr_353():
                _st_label_352 += 1
            else:
                super()._label('_st_label_352', block=True)
                _st_label_352 -= 1
        self.send(('msg7', encrypt(nB, key=pkB)), to=self._state.B)
        self.output('A authenticated B')

class roleB(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._roleBReceivedEvent_1 = []
        self._roleBReceivedEvent_2 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_roleBReceivedEvent_0', PatternExpr_430, sources=[PatternExpr_437], destinations=None, timestamps=None, record_history=None, handlers=[self._roleB_handler_429]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleBReceivedEvent_1', PatternExpr_466, sources=[PatternExpr_473], destinations=None, timestamps=None, record_history=True, handlers=[]), da.pat.EventPattern(da.pat.ReceivedEvent, '_roleBReceivedEvent_2', PatternExpr_524, sources=[PatternExpr_531], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, skB, S, pkS, **rest_634):
        super().setup(skB=skB, S=S, pkS=pkS, **rest_634)
        self._state.skB = skB
        self._state.S = S
        self._state.pkS = pkS
        at_fork()
        self._state.terminate = False

    def run(self):
        super()._label('_st_label_425', block=False)
        _st_label_425 = 0
        while (_st_label_425 == 0):
            _st_label_425 += 1
            if self._state.terminate:
                _st_label_425 += 1
            else:
                super()._label('_st_label_425', block=True)
                _st_label_425 -= 1

    def _roleB_handler_429(self, encAB, A):
        nA = None

        def ExistentialOpExpr_441():
            nonlocal nA
            for (nA, _BoundPattern446_) in [decrypt(encAB, key=self._state.skB)]:
                if (_BoundPattern446_ == A):
                    if True:
                        return True
            return False
        if ExistentialOpExpr_441():
            self.send(('msg4', (self._id, A)), to=self._state.S)
            super()._label('_st_label_463', block=False)
            sigS = pkA = None

            def ExistentialOpExpr_464():
                nonlocal sigS, pkA
                for (_, (_, _, _BoundPattern481_), (_ConstantPattern483_, sigS)) in self._roleBReceivedEvent_1:
                    if (_BoundPattern481_ == self._state.S):
                        if (_ConstantPattern483_ == 'msg5'):

                            def ExistentialOpExpr_487(sigS):
                                nonlocal pkA
                                for (_BoundPattern490_, pkA) in [verify(sigS, key=self._state.pkS)]:
                                    if (_BoundPattern490_ == A):
                                        if True:
                                            return True
                                return False
                            if ExistentialOpExpr_487(sigS=sigS):
                                return True
                return False
            _st_label_463 = 0
            while (_st_label_463 == 0):
                _st_label_463 += 1
                if ExistentialOpExpr_464():
                    _st_label_463 += 1
                else:
                    super()._label('_st_label_463', block=True)
                    _st_label_463 -= 1
        nB = nonce()
        self.send(('msg6', encrypt((nA, nB, self._id), key=pkA)), to=A)
        super()._label('_st_label_521', block=False)
        encAB2 = None

        def ExistentialOpExpr_522():
            nonlocal encAB2
            for (_, (_, _, _BoundPattern539_), (_ConstantPattern541_, encAB2)) in self._roleBReceivedEvent_2:
                if (_BoundPattern539_ == A):
                    if (_ConstantPattern541_ == 'msg7'):
                        if (decrypt(encAB2, key=self._state.skB) == nB):
                            return True
            return False
        _st_label_521 = 0
        while (_st_label_521 == 0):
            _st_label_521 += 1
            if ExistentialOpExpr_522():
                _st_label_521 += 1
            else:
                super()._label('_st_label_521', block=True)
                _st_label_521 -= 1
        self.output('B authenticated A')
        self._state.terminate = True
    _roleB_handler_429._labels = None
    _roleB_handler_429._notlabels = None

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])

    def run(self):
        (skS, pkS) = keygen('public')
        (skA, pkA) = keygen('public')
        (skB, pkB) = keygen('public')
        S = self.new(roleS)
        B = self.new(roleB, (skB, S, pkS))
        A = self.new(roleA, (skA, S, pkS, B))
        self._setup(S, (skS, [(A, pkA), (B, pkB)]))
        self._start(S)
        self._start(B)
        self._start(A)
