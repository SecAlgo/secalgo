# -*- generated by 1.0.12 -*-
import da
PatternExpr_188 = da.pat.TuplePattern([da.pat.ConstantPattern('msg2'), da.pat.FreePattern('i'), da.pat.TuplePattern([da.pat.FreePattern('M'), da.pat.FreePattern('A'), da.pat.FreePattern('B'), da.pat.FreePattern('encAS'), da.pat.FreePattern('encBS')])])
PatternExpr_206 = da.pat.FreePattern('B')
PatternExpr_329 = da.pat.TuplePattern([da.pat.ConstantPattern('msg4'), da.pat.BoundPattern('_BoundPattern332_'), da.pat.TuplePattern([da.pat.BoundPattern('_BoundPattern333_'), da.pat.FreePattern('encSA')])])
PatternExpr_339 = da.pat.BoundPattern('_BoundPattern340_')
PatternExpr_407 = da.pat.TuplePattern([da.pat.ConstantPattern('msg1'), da.pat.FreePattern('i'), da.pat.TuplePattern([da.pat.FreePattern('M'), da.pat.FreePattern('A'), da.pat.SelfPattern(), da.pat.FreePattern('encAS')])])
PatternExpr_423 = da.pat.FreePattern('A')
PatternExpr_454 = da.pat.TuplePattern([da.pat.ConstantPattern('msg3'), da.pat.BoundPattern('_BoundPattern457_'), da.pat.TuplePattern([da.pat.BoundPattern('_BoundPattern458_'), da.pat.FreePattern('encSA'), da.pat.FreePattern('encSB')])])
PatternExpr_466 = da.pat.BoundPattern('_BoundPattern467_')
_config_object = {}
from sa.secalgoB import *

class RoleS(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_RoleSReceivedEvent_0', PatternExpr_188, sources=[PatternExpr_206], destinations=None, timestamps=None, record_history=None, handlers=[self._RoleS_handler_187])])

    def setup(self, kAS, kBS, **rest_564):
        super().setup(kAS=kAS, kBS=kBS, **rest_564)
        self._state.kAS = kAS
        self._state.kBS = kBS
        at_fork()
        self._state.terminate = False

    @dec_proto_run_timer
    def run(self):
        self._state.terminate = False
        super()._label('_st_label_183', block=False)
        _st_label_183 = 0
        while (_st_label_183 == 0):
            _st_label_183 += 1
            if self._state.terminate:
                _st_label_183 += 1
            else:
                super()._label('_st_label_183', block=True)
                _st_label_183 -= 1

    def _RoleS_handler_187(self, i, M, A, B, encAS, encBS):
        nA = None

        def ExistentialOpExpr_209():
            nonlocal nA
            for (nA, _BoundPattern214_, _BoundPattern215_, _BoundPattern216_) in [decrypt(encAS, key=self._state.kAS)]:
                if (_BoundPattern214_ == M):
                    if (_BoundPattern215_ == A):
                        if (_BoundPattern216_ == B):
                            if True:
                                return True
            return False
        if ExistentialOpExpr_209():
            nB = None

            def ExistentialOpExpr_226():
                nonlocal nB
                for (nB, _BoundPattern231_, _BoundPattern232_, _BoundPattern233_) in [decrypt(encBS, key=self._state.kBS)]:
                    if (_BoundPattern231_ == M):
                        if (_BoundPattern232_ == A):
                            if (_BoundPattern233_ == B):
                                if True:
                                    return True
                return False
            if ExistentialOpExpr_226():
                kAB = keygen('shared')
                self.send(('msg3', i, (M, encrypt((nA, kAB), key=self._state.kAS), encrypt((nB, kAB), key=self._state.kBS))), to=B)
        self._state.terminate = True
    _RoleS_handler_187._labels = None
    _RoleS_handler_187._notlabels = None

class RoleA(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._RoleAReceivedEvent_0 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_RoleAReceivedEvent_0', PatternExpr_329, sources=[PatternExpr_339], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, S, kAS, B, **rest_564):
        super().setup(S=S, kAS=kAS, B=B, **rest_564)
        self._state.S = S
        self._state.kAS = kAS
        self._state.B = B
        at_fork()
        self._state.i = 1

    @dec_proto_run_timer
    def run(self):
        M = nonce()
        nA = nonce()
        self.send(('msg1', self._state.i, (M, self._id, self._state.B, encrypt((nA, M, self._id, self._state.B), key=self._state.kAS))), to=self._state.B)
        super()._label('_st_label_326', block=False)
        kAB = encSA = None

        def ExistentialOpExpr_327():
            nonlocal kAB, encSA
            for (_, (_, _, _BoundPattern347_), (_ConstantPattern349_, _BoundPattern351_, (_BoundPattern353_, encSA))) in self._RoleAReceivedEvent_0:
                if (_BoundPattern347_ == self._state.B):
                    if (_ConstantPattern349_ == 'msg4'):
                        if (_BoundPattern351_ == self._state.i):
                            if (_BoundPattern353_ == M):

                                def ExistentialOpExpr_356(encSA):
                                    nonlocal kAB
                                    for (_BoundPattern359_, kAB) in [decrypt(encSA, key=self._state.kAS)]:
                                        if (_BoundPattern359_ == nA):
                                            if True:
                                                return True
                                    return False
                                if ExistentialOpExpr_356(encSA=encSA):
                                    return True
            return False
        _st_label_326 = 0
        while (_st_label_326 == 0):
            _st_label_326 += 1
            if ExistentialOpExpr_327():
                _st_label_326 += 1
            else:
                super()._label('_st_label_326', block=True)
                _st_label_326 -= 1
        self.output('A - Key Exchange Complete')
        self._state.i += 1

class RoleB(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._RoleBReceivedEvent_1 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_RoleBReceivedEvent_0', PatternExpr_407, sources=[PatternExpr_423], destinations=None, timestamps=None, record_history=None, handlers=[self._RoleB_handler_406]), da.pat.EventPattern(da.pat.ReceivedEvent, '_RoleBReceivedEvent_1', PatternExpr_454, sources=[PatternExpr_466], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, S, kBS, **rest_564):
        super().setup(S=S, kBS=kBS, **rest_564)
        self._state.S = S
        self._state.kBS = kBS
        at_fork()
        self._state.terminate = False

    @dec_proto_run_timer
    def run(self):
        self._state.terminate = False
        super()._label('_st_label_402', block=False)
        _st_label_402 = 0
        while (_st_label_402 == 0):
            _st_label_402 += 1
            if self._state.terminate:
                _st_label_402 += 1
            else:
                super()._label('_st_label_402', block=True)
                _st_label_402 -= 1

    def _RoleB_handler_406(self, i, M, A, encAS):
        nB = nonce()
        self.send(('msg2', i, (M, A, self._id, encAS, encrypt((nB, M, A, self._id), key=self._state.kBS))), to=self._state.S)
        super()._label('_st_label_451', block=False)
        encSB = encSA = kAB = None

        def ExistentialOpExpr_452():
            nonlocal encSB, encSA, kAB
            for (_, (_, _, _BoundPattern474_), (_ConstantPattern476_, _BoundPattern478_, (_BoundPattern480_, encSA, encSB))) in self._RoleBReceivedEvent_1:
                if (_BoundPattern474_ == self._state.S):
                    if (_ConstantPattern476_ == 'msg3'):
                        if (_BoundPattern478_ == i):
                            if (_BoundPattern480_ == M):

                                def ExistentialOpExpr_484(encSB):
                                    nonlocal kAB
                                    for (_BoundPattern487_, kAB) in [decrypt(encSB, key=self._state.kBS)]:
                                        if (_BoundPattern487_ == nB):
                                            if True:
                                                return True
                                    return False
                                if ExistentialOpExpr_484(encSB=encSB):
                                    return True
            return False
        _st_label_451 = 0
        while (_st_label_451 == 0):
            _st_label_451 += 1
            if ExistentialOpExpr_452():
                _st_label_451 += 1
            else:
                super()._label('_st_label_451', block=True)
                _st_label_451 -= 1
        self.send(('msg4', i, (M, encSA)), to=A)
        self.output('B - Key Exchange Complete')
        self._state.terminate = True
    _RoleB_handler_406._labels = None
    _RoleB_handler_406._notlabels = None

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])

    def run(self):
        kAS = keygen('shared')
        kBS = keygen('shared')
        S = self.new(RoleS, (kAS, kBS))
        B = self.new(RoleB, (S, kBS))
        A = self.new(RoleA, (S, kAS, B))
        self._start(S)
        self._start(B)
        self._start(A)
