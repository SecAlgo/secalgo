Program          ::= Configuration RoleClass* Method
RoleClass        ::= role ClassName extends ClassName: Method*
Method           ::= def MethodName(Parameter*) Statment

Statement        ::= InstanceVariable = Expression
                     InstanceVariable = new ClassName
	       	     Statement ; Statement
	       	     if Expression: Statement else: Statement
	       	     for Iterator: Statement
	       	     while Expression: Statement
	       	     Expression.MethodName(Expression*)
	       	     send( ) to Expression
	       	     receive ( Expression ) from Expression

Expression       ::= Literal
                     Parameter
	       	     InstanceVariable
	       	     Tuple
	       	     Expression.MethodName(Expression*)
	       	     UnaryOp(Expression)
	       	     BinaryOp(Expression, Expression)
	             is_instance(Expression, ClassName)
	             and(Expression, Expression)
	             or(Expression, Expression)

Tuple            ::= Expression*

UnaryOp          ::= not
                     is_tuple
	             len

BinaryOp         ::= is
                     plus
	             select

Iterator         ::= Expression* in Expression

Configuration    ::= configuration Algorithm ModeOfOperation

Algorithm        ::= aes
                     des
		     blowfish
		     rsa
		     dsa

ModeOfOperation  ::= ecb
                     cbc
		     ctr

ClassName        ::=

MethodName       ::=

Parameter        ::=

InstanceVariable ::= Expression.Field

Field            ::=

Literal          ::= BooleanLiteral
                     IntegerLiteral

BooleanLiteral   ::= true
                     false

IntegerLiteral   ::= 